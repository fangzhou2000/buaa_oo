总体思路：
请求分配：
1.共用一个waitqueue，多个电梯抢，设置mark位
	优点：无为而治，scheduler写法极其简单，效果不错，对于请求的可扩展性增强。
	缺点：需要建一个person类，相当于又把省下的代码量还回去了。
2.每个电梯一个waitqueue
	优点：易于实现更高级的算法，图
	缺点：大概率写不出来，或者写出来的不如1，而且换乘比1麻烦。
调度算法：
LOOK，接完一个主请求后，把当前方向(包括本层)的所有请求都接完，即mainquest为离的最远的，如果前方没有同方向的则换方向，如果都没有直接选最远的。