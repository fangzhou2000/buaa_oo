Complexity metrics,ÖÜËÄ, 25 3ÔÂ 2021 20:15:54 CST
Method,CogC,ev(G),iv(G),v(G)
"Const.Const(BigInteger)",0,1,1,1
"Const.clone()",0,1,1,1
"Const.deri()",0,1,1,1
"Const.toString()",0,1,1,1
"Cos.Cos(String,BigInteger)",0,1,1,1
"Cos.clone()",0,1,1,1
"Cos.deri()",16,10,9,10
"Cos.toString()",3,3,2,3
"CreatTree.getRoot(String)",7,1,7,7
"Deri.deri(Node)",21,11,12,14
"Deri.deritoolong(String,String,String,String)",25,8,13,17
"Expression.Expression(String)",0,1,1,1
"Expression.clone()",0,1,1,1
"Expression.deri()",0,1,1,1
"Expression.toString()",0,1,1,1
"Factor.clone(Factor)",6,7,7,7
"Factor.deri(Factor)",6,7,7,7
"FactorFactory.generateFactor(String)",15,6,9,9
"Item.Item()",0,1,1,1
"Item.addCoef(BigInteger)",0,1,1,1
"Item.equals(Object)",6,3,3,4
"Item.getCoef()",0,1,1,1
"Item.getOther()",0,1,1,1
"Item.getPower()",0,1,1,1
"Item.hashCode()",0,1,1,1
"Item.mulCoef(BigInteger)",0,1,1,1
"Item.mulOther(String)",2,1,1,2
"Item.mulPower(BigInteger)",0,1,1,1
"Item.toString()",25,4,18,20
"Macro.getPatternConst()",0,1,1,1
"Macro.getPatternCos()",0,1,1,1
"Macro.getPatternExp()",0,1,1,1
"Macro.getPatternItem()",0,1,1,1
"Macro.getPatternPower()",0,1,1,1
"Macro.getPatternSin()",0,1,1,1
"MainClass.main(String[])",2,1,2,3
"ManageExp.deleteBracket(String)",13,4,12,13
"ManageExp.manageExp(String)",2,2,1,2
"ManageInput.manageBracket(String)",11,1,6,7
"ManageInput.manageFactor(String)",0,1,1,1
"ManageInput.manageInput(String)",0,1,1,1
"ManageInput.manageOrigin(String)",4,1,3,4
"ManageMerge.manageItem(String)",28,8,12,12
"ManageMerge.merge(Poly,Item)",4,3,4,4
"MyException.MyException()",0,1,1,1
"Node.Node(Factor)",0,1,1,1
"Node.Node(Factor,Node,Node)",0,1,1,1
"Node.add(Node,Node)",2,1,2,2
"Node.getFactor()",0,1,1,1
"Node.getLeftnode()",0,1,1,1
"Node.getRightnode()",0,1,1,1
"Node.setFactor(Factor)",0,1,1,1
"Node.setLeftnode(Node)",0,1,1,1
"Node.setRightnode(Node)",0,1,1,1
"Node.toString()",3,2,2,3
"Oper.Oper(String)",0,1,1,1
"Oper.clone()",0,1,1,1
"Oper.toString()",0,1,1,1
"Parse.Parse(String)",0,1,1,1
"Parse.matchAddSub()",4,2,3,4
"Parse.matchBlank()",2,2,2,2
"Parse.matchExp()",4,2,3,4
"Parse.matchFactor()",13,5,7,9
"Parse.matchFactortoolong(Matcher,Matcher,Matcher,Matcher)",25,11,13,17
"Parse.matchIndex()",7,4,3,4
"Parse.matchItem()",2,1,3,3
"Parse.matchLeftBracket()",3,2,2,3
"Parse.matchMul()",3,2,2,3
"Parse.matchRightBracket()",3,2,2,3
"Poly.Poly()",0,1,1,1
"Poly.getPoly()",0,1,1,1
"Poly.toString()",4,3,4,4
"Power.Power(BigInteger)",0,1,1,1
"Power.clone()",0,1,1,1
"Power.deri()",5,5,5,5
"Power.getIndex()",0,1,1,1
"Power.toString()",4,4,3,4
"Sin.Sin(String,BigInteger)",0,1,1,1
"Sin.clone()",0,1,1,1
"Sin.deri()",16,10,8,10
"Sin.toString()",3,3,2,3
"Tree.Tree()",0,1,1,1
"Tree.add(Node,Node)",5,4,5,5
"Tree.getRoot()",0,1,1,1
"Tree.setRoot(Node)",0,1,1,1

Class,OCavg,OCmax,WMC
"Const",1.00,1,4
"Cos",3.75,10,15
"CreatTree",7.00,7,7
"Deri",11.50,12,23
"Expression",1.00,1,4
"Factor",7.00,7,14
"FactorFactory",9.00,9,9
"Item",2.45,14,27
"Macro",1.00,1,6
"MainClass",2.00,2,2
"ManageExp",5.50,9,11
"ManageInput",2.75,6,11
"ManageMerge",8.00,12,16
"MyException",1.00,1,1
"Node",1.20,2,12
"Oper",1.00,1,3
"Parse",4.00,15,44
"Poly",2.00,4,6
"Power",2.40,5,12
"Sin",3.75,10,15
"Tree",1.75,4,7

Package,v(G)avg,v(G)tot
"",3.32,282

Module,v(G)avg,v(G)tot
"homework3",3.32,282

Project,v(G)avg,v(G)tot
"project",3.32,282

