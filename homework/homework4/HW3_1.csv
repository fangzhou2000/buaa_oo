OO,ÖÜËÄ, 25 3ÔÂ 2021 20:14:07 CST
Method,BRANCH,CONTROL,LOC
"Const.Const(BigInteger)",0,0,4
"Const.clone()",0,0,3
"Const.deri()",0,0,3
"Const.toString()",0,0,3
"Cos.Cos(String,BigInteger)",0,0,7
"Cos.clone()",0,0,3
"Cos.deri()",0,9,36
"Cos.toString()",0,2,9
"CreatTree.getRoot(String)",0,6,42
"Deri.deri(Node)",0,10,34
"Deri.deritoolong(String,String,String,String)",0,11,43
"Expression.Expression(String)",0,0,6
"Expression.clone()",0,0,3
"Expression.deri()",0,0,7
"Expression.toString()",0,0,3
"Factor.clone(Factor)",0,6,22
"Factor.deri(Factor)",0,6,22
"FactorFactory.generateFactor(String)",0,8,44
"Item.Item()",0,0,5
"Item.addCoef(BigInteger)",0,0,3
"Item.equals(Object)",0,2,12
"Item.getCoef()",0,0,3
"Item.getOther()",0,0,3
"Item.getPower()",0,0,3
"Item.hashCode()",0,0,3
"Item.mulCoef(BigInteger)",0,0,3
"Item.mulOther(String)",0,1,7
"Item.mulPower(BigInteger)",0,0,3
"Item.toString()",0,13,44
"Macro.getPatternConst()",0,0,3
"Macro.getPatternCos()",0,0,3
"Macro.getPatternExp()",0,0,3
"Macro.getPatternItem()",0,0,3
"Macro.getPatternPower()",0,0,3
"Macro.getPatternSin()",0,0,3
"MainClass.main(String[])",0,2,29
"ManageExp.deleteBracket(String)",1,9,38
"ManageExp.manageExp(String)",0,1,7
"ManageInput.manageBracket(String)",0,5,23
"ManageInput.manageFactor(String)",0,0,5
"ManageInput.manageInput(String)",0,0,6
"ManageInput.manageOrigin(String)",0,2,22
"ManageMerge.manageItem(String)",0,11,55
"ManageMerge.merge(Poly,Item)",1,4,13
"MyException.MyException()",0,0,2
"Node.Node(Factor)",0,0,5
"Node.Node(Factor,Node,Node)",0,0,5
"Node.add(Node,Node)",0,1,10
"Node.getFactor()",0,0,3
"Node.getLeftnode()",0,0,3
"Node.getRightnode()",0,0,3
"Node.setFactor(Factor)",0,0,3
"Node.setLeftnode(Node)",0,0,3
"Node.setRightnode(Node)",0,0,3
"Node.toString()",0,1,7
"Oper.Oper(String)",0,0,3
"Oper.clone()",0,0,3
"Oper.toString()",0,0,3
"Parse.Parse(String)",0,0,4
"Parse.matchAddSub()",0,1,9
"Parse.matchBlank()",0,1,12
"Parse.matchExp()",0,3,18
"Parse.matchFactor()",1,7,31
"Parse.matchFactortoolong(Matcher,Matcher,Matcher,Matcher)",2,16,61
"Parse.matchIndex()",0,3,17
"Parse.matchItem()",0,2,13
"Parse.matchLeftBracket()",0,1,8
"Parse.matchMul()",0,1,8
"Parse.matchRightBracket()",0,1,8
"Poly.Poly()",0,0,3
"Poly.getPoly()",0,0,3
"Poly.toString()",0,3,13
"Power.Power(BigInteger)",0,0,3
"Power.clone()",0,0,3
"Power.deri()",0,4,13
"Power.getIndex()",0,0,3
"Power.toString()",0,3,11
"Sin.Sin(String,BigInteger)",0,0,6
"Sin.clone()",0,0,3
"Sin.deri()",0,9,34
"Sin.toString()",0,2,9
"Tree.Tree()",0,0,3
"Tree.add(Node,Node)",0,3,17
"Tree.getRoot()",0,0,3
"Tree.setRoot(Node)",0,0,3

Class,LOC,NAAC,NOAC,NOOC
"Const",17,1,1,2
"Cos",61,4,1,2
"CreatTree",44,0,1,0
"Deri",79,0,2,0
"Expression",24,3,1,2
"Factor",46,0,2,0
"FactorFactory",46,0,1,0
"Item",97,3,7,3
"Macro",38,11,6,0
"MainClass",31,0,1,0
"ManageExp",47,0,2,0
"ManageInput",58,0,4,0
"ManageMerge",81,5,2,0
"MyException",4,0,0,0
"Node",50,3,7,1
"Oper",12,1,0,2
"Parse",200,8,10,0
"Poly",22,1,1,1
"Power",36,1,2,2
"Sin",58,4,1,2
"Tree",29,1,3,0

Package,C,LOC,METH
"",21,"1,128",85

